<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
  <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
  <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
  <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){green} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

  <!-- 변수값 설정  -->
  <property name="LOGS_PATH" value="./logs"/>
  <property name="LOGS_LEVEL" value="INFO"/>

  <!-- Console Appender -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>
        ${CONSOLE_LOG_PATTERN}
<!--        %d{yyyy-MM-dd HH:mm:ss} %highlight[%thread] [%-5level] %logger{36} - %msg%n-->
      </pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>

  <!-- File Appender -->
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!--   파일명과 경로 설정     -->
    <file>${LOGS_PATH}/log_file.log</file>
    <!--  출력 패턴 설정  -->
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
      <charset>UTF-8</charset>
    </encoder>
    <!-- Rolling 정책 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!--   .gz , .zip 등을 넣으면 자동으로 일자별 로그 파일이 압축   -->
      <fileNamePattern>${LOGS_PATH}/%d{yyyy-MM-dd}_%i.log</fileNamePattern>
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <!-- 파일당 최대 용량 -->
        <maxFileSize>10MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
      <!--   일자별 로그파일 최대 보관주기 (일 기준) , 해당 설정일 이상된 파일은 자동으로 제거 (RollingFileAppender)   -->
      <maxHistory>60</maxHistory>
    </rollingPolicy>
  </appender>

  <!-- Error Appender -->
  <appender name="Error" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!--  파일명과 경로 설정  -->
    <file>${LOGS_PATH}/error_file.log</file>
    <!--  출력 패턴 설정  -->
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
      <charset>UTF-8</charset>
    </encoder>
    <!-- Rolling 정책 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!--   .gz , .zip 등을 넣으면 자동으로 일자별 로그 파일이 압축   -->
      <fileNamePattern>${LOGS_PATH}/%d{yyyy-MM-dd}_error.log</fileNamePattern>
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <!--  threshold filter 를 넣어서 error 이상의 로그만 걸러지도록 필터링  -->
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>ERROR</level>
    </filter>
  </appender>

  <root level="${LOGS_PATH}">
    <appender-ref ref="STDOUT"/>
    <appender-ref ref="FILE"/>
    <appender-ref ref="Error"/>
  </root>
</configuration>